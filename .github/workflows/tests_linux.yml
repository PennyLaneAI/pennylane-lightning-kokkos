name: Testing (Linux)
on:
  workflow_call:
    inputs:
      lightning-kokkos-version:
        type: string
        required: true
        description: The version of lightning to use. Valid values are either 'stable' (most recent git-tag) or 'latest' (most recent commit from master)
      pennylane-version:
        type: string
        required: true
        description: The version of PennyLane to use. Valid values are either 'stable' (most recent git-tag) or 'latest' (most recent commit from master)
  push:
    branches:
      - master
  #pull_request:

env:
  PY_VERSION: 3.8
  GCC_VERSION: 11
  COVERAGE_FLAGS: "--cov=pennylane_lightning_kokkos --cov-report=term-missing --cov-report=xml:./coverage.xml --no-flaky-report -p no:warnings --tb=native"
  OMP_NUM_THREADS: "2"

concurrency:
  group: cpu-tests-${{ github.ref }}-${{ inputs.lightning-kokkos-version }}-${{ inputs.pennylane-version }}
  cancel-in-progress: true

jobs:
  cpptests_openmp:
    name: C++ tests (Linux) for OpenMP Kokkos backend
    runs-on: ubuntu-22.04

    steps:
      - uses: actions/checkout@v3
        with:
          # Checkout entire git-history if workflow_call passes 'stable' as we need to find the most recent git-tag
          fetch-depth: ${{ inputs.lightning-kokkos-version == 'stable' && 0 || 2 }}

      - name: Switch to stable build of Lightning-Kokkos
        if: inputs.lightning-kokkos-version == 'stable'
        run: git checkout $(git tag | sort -V | tail -1)

      - uses: actions/setup-python@v4
        name: Install Python
        with:
          python-version: '${{ env.PY_VERSION }}'

      - name: Install dependencies
        run: sudo apt-get update && sudo apt-get -y -q install cmake gcc-${{ env.GCC_VERSION }} g++-${{ env.GCC_VERSION }} gcovr lcov

      - name: Install Latest PennyLane
        if: inputs.pennylane-version == 'latest'
        run: python -m pip install git+https://github.com/PennyLaneAI/pennylane.git@master

      - name: Build and run unit tests
        env:
          OMP_PROC_BIND: false
          OMP_PLACES: threads
        run: |
            cmake . -BBuild -DKokkos_ENABLE_OPENMP=ON -DPLKOKKOS_BUILD_TESTS=ON -DPLKOKKOS_ENABLE_SANITIZER=ON -DCMAKE_CXX_COMPILER="$(which g++-${{ env.GCC_VERSION }})"
            cmake --build ./Build
            ./Build/pennylane_lightning_kokkos/src/tests/runner_kokkos

  pythontests_openmp:
    name: Python tests for OpenMP Kokkos Backend
    runs-on: ubuntu-22.04

    steps:
      - name: Checkout PennyLane-Lightning-Kokkos
        uses: actions/checkout@v3
        with:
          path: main
          # Checkout entire git-history if workflow_call passes 'stable' as we need to find the most recent git-tag
          fetch-depth: ${{ inputs.lightning-kokkos-version == 'stable' && 0 || 2 }}

      - name: Switch to stable build of Lightning-Kokkos
        if: inputs.lightning-kokkos-version == 'stable'
        run: git checkout $(git tag | sort -V | tail -1)

      - uses: actions/setup-python@v4
        name: Install Python
        with:
          python-version: '${{ env.PY_VERSION }}'

      - name: Install dependencies
        run: sudo apt-get update && sudo apt-get -y -q install cmake gcc-${{ env.GCC_VERSION }} g++-${{ env.GCC_VERSION }} ninja-build

      - name: Install Latest PennyLane
        # We want to install the latest PL on non workflow_call events
        if: inputs.pennylane-version == 'latest'  || inputs.pennylane-version == ''
        run: python -m pip install git+https://github.com/PennyLaneAI/pennylane.git@master

      - name: Get required Python packages
        run: |
          python -m pip install --upgrade pip
          python -m pip install pytest pytest-mock flaky
          python -m pip install --index-url https://test.pypi.org/simple/ pennylane-lightning --pre --force-reinstall --no-deps

      - name: Install lightning.kokkos device
        env:
          CMAKE_ARGS: -DKokkos_ENABLE_OPENMP=ON
          CC: gcc-${{ env.GCC_VERSION }}
          CXX: g++-${{ env.GCC_VERSION }}
        run: |
          cd main
          python -m pip install -e . --verbose
          
      - name: Run PennyLane-Lightning-Kokkos unit tests
        env:
          OMP_PROC_BIND: false
        run: |
          cd main/
          pytest tests/
          pl-device-test --device lightning.kokkos --skip-ops --shots=20000
          pl-device-test --device lightning.kokkos --skip-ops --shots=None

  cpptests_serial:
    name: C++ tests (Linux) for Serial Kokkos backend
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-22.04]
    steps:
      - name: Checkout PennyLane-Lightning-Kokkos
        uses: actions/checkout@v3
        with:
          # Checkout entire git-history if workflow_call passes 'stable' as we need to find the most recent git-tag
          fetch-depth: ${{ inputs.lightning-kokkos-version == 'stable' && 0 || 2 }}

      - name: Switch to stable build of Lightning-Kokkos
        if: inputs.lightning-kokkos-version == 'stable'
        run: git checkout $(git tag | sort -V | tail -1)

      - uses: actions/setup-python@v4
        name: Install Python
        with:
          python-version: '${{ env.PY_VERSION }}'

      - name: Install dependencies
        run: sudo apt-get update && sudo apt-get -y -q install cmake gcc-${{ env.GCC_VERSION }} g++-${{ env.GCC_VERSION }} gcovr lcov

      - name: Install Latest PennyLane
        if: inputs.pennylane-version == 'latest'
        run: python -m pip install git+https://github.com/PennyLaneAI/pennylane.git@master

      - name: Build and run unit tests
        run: |
            cmake . -BBuild -DPLKOKKOS_BUILD_TESTS=ON -DPLKOKKOS_ENABLE_SANITIZER=ON -DCMAKE_CXX_COMPILER="$(which g++-${{ env.GCC_VERSION }})"
            cmake --build ./Build
            ./Build/pennylane_lightning_kokkos/src/tests/runner_kokkos

  pythontests_serial:
    name: Python tests for Serial Kokkos Backend
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-22.04]

    steps:
      - name: Checkout PennyLane-Lightning-Kokkos
        uses: actions/checkout@v3
        with:
          path: main
          # Checkout entire git-history if workflow_call passes 'stable' as we need to find the most recent git-tag
          fetch-depth: ${{ inputs.lightning-kokkos-version == 'stable' && 0 || 2 }}

      - uses: actions/setup-python@v4
        name: Install Python
        with:
          python-version: '${{ env.PY_VERSION }}'

      - name: Install dependencies
        run: sudo apt-get update && sudo apt-get -y -q install cmake gcc-${{ env.GCC_VERSION }} g++-${{ env.GCC_VERSION }} ninja-build

      - name: Install Latest PennyLane
        # We want to install the latest PL on non workflow_call events
        if: inputs.pennylane-version == 'latest'  || inputs.pennylane-version == ''
        run: python -m pip install git+https://github.com/PennyLaneAI/pennylane.git@master

      - name: Get required Python packages
        run: |
          python -m pip install --upgrade pip
          python -m pip install pytest pytest-mock flaky
          python -m pip install --index-url https://test.pypi.org/simple/ pennylane-lightning --pre --force-reinstall --no-deps

      - name: Install lightning.kokkos device
        env:
          CMAKE_ARGS: -DKokkos_ENABLE_SERIAL=ON
          CC: gcc-${{ env.GCC_VERSION }}
          CXX: g++-${{ env.GCC_VERSION }}
        run: |
          cd main
          python -m pip install -e . --verbose

      - name: Run PennyLane-Lightning-Kokkos unit tests
        env:
          OMP_PROC_BIND: false
        run: |
          cd main/
          pytest tests/
          pl-device-test --device lightning.kokkos --skip-ops --shots=20000
          pl-device-test --device lightning.kokkos --skip-ops --shots=None
  cpptests_threads:
    name: C++ tests (Linux) for C++ Threads Kokkos backend
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-22.04]
    steps:
      - name: Checkout PennyLane-Lightning-Kokkos
        uses: actions/checkout@v3
        with:
          # Checkout entire git-history if workflow_call passes 'stable' as we need to find the most recent git-tag
          fetch-depth: ${{ inputs.lightning-kokkos-version == 'stable' && 0 || 2 }}

      - name: Switch to stable build of Lightning-Kokkos
        if: inputs.lightning-kokkos-version == 'stable'
        run: git checkout $(git tag | sort -V | tail -1)

      - uses: actions/setup-python@v4
        name: Install Python
        with:
          python-version: '${{ env.PY_VERSION }}'

      - name: Install dependencies
        run: sudo apt-get update && sudo apt-get -y -q install cmake gcc-${{ env.GCC_VERSION }} g++-${{ env.GCC_VERSION }} gcovr lcov

      - name: Install Latest PennyLane
        if: inputs.pennylane-version == 'latest'
        run: python -m pip install git+https://github.com/PennyLaneAI/pennylane.git@master

      - name: Build and run unit tests
        run: |
            cmake . -BBuild -DPLKOKKOS_BUILD_TESTS=ON -DKokkos_ENABLE_THREADS=ON -DPLKOKKOS_ENABLE_SANITIZER=ON -DCMAKE_CXX_COMPILER="$(which g++-${{ env.GCC_VERSION }})"
            cmake --build ./Build
            ./Build/pennylane_lightning_kokkos/src/tests/runner_kokkos
  pythontests_threads:
    name: Python tests for C++ Threads Kokkos Backend
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-22.04]

    steps:
      - name: Checkout PennyLane-Lightning-Kokkos
        uses: actions/checkout@v3
        with:
          path: main
          # Checkout entire git-history if workflow_call passes 'stable' as we need to find the most recent git-tag
          fetch-depth: ${{ inputs.lightning-kokkos-version == 'stable' && 0 || 2 }}

      - name: Switch to stable build of Lightning-Kokkos
        if: inputs.lightning-kokkos-version == 'stable'
        run: git checkout $(git tag | sort -V | tail -1)

      - uses: actions/setup-python@v4
        name: Install Python
        with:
          python-version: '${{ env.PY_VERSION }}'

      - name: Install dependencies
        run: sudo apt-get update && sudo apt-get -y -q install cmake gcc-${{ env.GCC_VERSION }} g++-${{ env.GCC_VERSION }} ninja-build

      - name: Install Latest PennyLane
        # We want to install the latest PL on non workflow_call events
        if: inputs.pennylane-version == 'latest'  || inputs.pennylane-version == ''
        run: python -m pip install git+https://github.com/PennyLaneAI/pennylane.git@master

      - name: Get required Python packages
        run: |
          python -m pip install --upgrade pip
          python -m pip install pytest pytest-mock flaky
          python -m pip install --index-url https://test.pypi.org/simple/ pennylane-lightning --pre --force-reinstall --no-deps

      - name: Install lightning.kokkos device
        env:
          CMAKE_ARGS: -DKokkos_ENABLE_THREADS=ON
          CC: gcc-${{ env.GCC_VERSION }}
          CXX: g++-${{ env.GCC_VERSION }}
        run: |
          cd main
          python -m pip install -e . --verbose

      - name: Run PennyLane-Lightning-Kokkos unit tests
        env:
          OMP_PROC_BIND: false
        run: |
          cd main/
          pytest tests/
          pl-device-test --device lightning.kokkos --skip-ops --shots=20000
          pl-device-test --device lightning.kokkos --skip-ops --shots=None
